//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SelfserviceLoginFlows = newSelfserviceLoginFlowsTable("public", "selfservice_login_flows", "")

type selfserviceLoginFlowsTable struct {
	postgres.Table

	//Columns
	ID              postgres.ColumnString
	RequestURL      postgres.ColumnString
	IssuedAt        postgres.ColumnTimestamp
	ExpiresAt       postgres.ColumnTimestamp
	ActiveMethod    postgres.ColumnString
	CsrfToken       postgres.ColumnString
	CreatedAt       postgres.ColumnTimestamp
	UpdatedAt       postgres.ColumnTimestamp
	Forced          postgres.ColumnBool
	Type            postgres.ColumnString
	UI              postgres.ColumnString
	Nid             postgres.ColumnString
	RequestedAal    postgres.ColumnString
	InternalContext postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SelfserviceLoginFlowsTable struct {
	selfserviceLoginFlowsTable

	EXCLUDED selfserviceLoginFlowsTable
}

// AS creates new SelfserviceLoginFlowsTable with assigned alias
func (a SelfserviceLoginFlowsTable) AS(alias string) *SelfserviceLoginFlowsTable {
	return newSelfserviceLoginFlowsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SelfserviceLoginFlowsTable with assigned schema name
func (a SelfserviceLoginFlowsTable) FromSchema(schemaName string) *SelfserviceLoginFlowsTable {
	return newSelfserviceLoginFlowsTable(schemaName, a.TableName(), a.Alias())
}

func newSelfserviceLoginFlowsTable(schemaName, tableName, alias string) *SelfserviceLoginFlowsTable {
	return &SelfserviceLoginFlowsTable{
		selfserviceLoginFlowsTable: newSelfserviceLoginFlowsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                   newSelfserviceLoginFlowsTableImpl("", "excluded", ""),
	}
}

func newSelfserviceLoginFlowsTableImpl(schemaName, tableName, alias string) selfserviceLoginFlowsTable {
	var (
		IDColumn              = postgres.StringColumn("id")
		RequestURLColumn      = postgres.StringColumn("request_url")
		IssuedAtColumn        = postgres.TimestampColumn("issued_at")
		ExpiresAtColumn       = postgres.TimestampColumn("expires_at")
		ActiveMethodColumn    = postgres.StringColumn("active_method")
		CsrfTokenColumn       = postgres.StringColumn("csrf_token")
		CreatedAtColumn       = postgres.TimestampColumn("created_at")
		UpdatedAtColumn       = postgres.TimestampColumn("updated_at")
		ForcedColumn          = postgres.BoolColumn("forced")
		TypeColumn            = postgres.StringColumn("type")
		UIColumn              = postgres.StringColumn("ui")
		NidColumn             = postgres.StringColumn("nid")
		RequestedAalColumn    = postgres.StringColumn("requested_aal")
		InternalContextColumn = postgres.StringColumn("internal_context")
		allColumns            = postgres.ColumnList{IDColumn, RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, ActiveMethodColumn, CsrfTokenColumn, CreatedAtColumn, UpdatedAtColumn, ForcedColumn, TypeColumn, UIColumn, NidColumn, RequestedAalColumn, InternalContextColumn}
		mutableColumns        = postgres.ColumnList{RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, ActiveMethodColumn, CsrfTokenColumn, CreatedAtColumn, UpdatedAtColumn, ForcedColumn, TypeColumn, UIColumn, NidColumn, RequestedAalColumn, InternalContextColumn}
	)

	return selfserviceLoginFlowsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		RequestURL:      RequestURLColumn,
		IssuedAt:        IssuedAtColumn,
		ExpiresAt:       ExpiresAtColumn,
		ActiveMethod:    ActiveMethodColumn,
		CsrfToken:       CsrfTokenColumn,
		CreatedAt:       CreatedAtColumn,
		UpdatedAt:       UpdatedAtColumn,
		Forced:          ForcedColumn,
		Type:            TypeColumn,
		UI:              UIColumn,
		Nid:             NidColumn,
		RequestedAal:    RequestedAalColumn,
		InternalContext: InternalContextColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
