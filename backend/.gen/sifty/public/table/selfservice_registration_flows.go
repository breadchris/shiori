//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SelfserviceRegistrationFlows = newSelfserviceRegistrationFlowsTable("public", "selfservice_registration_flows", "")

type selfserviceRegistrationFlowsTable struct {
	postgres.Table

	//Columns
	ID              postgres.ColumnString
	RequestURL      postgres.ColumnString
	IssuedAt        postgres.ColumnTimestamp
	ExpiresAt       postgres.ColumnTimestamp
	ActiveMethod    postgres.ColumnString
	CsrfToken       postgres.ColumnString
	CreatedAt       postgres.ColumnTimestamp
	UpdatedAt       postgres.ColumnTimestamp
	Type            postgres.ColumnString
	UI              postgres.ColumnString
	Nid             postgres.ColumnString
	InternalContext postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SelfserviceRegistrationFlowsTable struct {
	selfserviceRegistrationFlowsTable

	EXCLUDED selfserviceRegistrationFlowsTable
}

// AS creates new SelfserviceRegistrationFlowsTable with assigned alias
func (a SelfserviceRegistrationFlowsTable) AS(alias string) *SelfserviceRegistrationFlowsTable {
	return newSelfserviceRegistrationFlowsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SelfserviceRegistrationFlowsTable with assigned schema name
func (a SelfserviceRegistrationFlowsTable) FromSchema(schemaName string) *SelfserviceRegistrationFlowsTable {
	return newSelfserviceRegistrationFlowsTable(schemaName, a.TableName(), a.Alias())
}

func newSelfserviceRegistrationFlowsTable(schemaName, tableName, alias string) *SelfserviceRegistrationFlowsTable {
	return &SelfserviceRegistrationFlowsTable{
		selfserviceRegistrationFlowsTable: newSelfserviceRegistrationFlowsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                          newSelfserviceRegistrationFlowsTableImpl("", "excluded", ""),
	}
}

func newSelfserviceRegistrationFlowsTableImpl(schemaName, tableName, alias string) selfserviceRegistrationFlowsTable {
	var (
		IDColumn              = postgres.StringColumn("id")
		RequestURLColumn      = postgres.StringColumn("request_url")
		IssuedAtColumn        = postgres.TimestampColumn("issued_at")
		ExpiresAtColumn       = postgres.TimestampColumn("expires_at")
		ActiveMethodColumn    = postgres.StringColumn("active_method")
		CsrfTokenColumn       = postgres.StringColumn("csrf_token")
		CreatedAtColumn       = postgres.TimestampColumn("created_at")
		UpdatedAtColumn       = postgres.TimestampColumn("updated_at")
		TypeColumn            = postgres.StringColumn("type")
		UIColumn              = postgres.StringColumn("ui")
		NidColumn             = postgres.StringColumn("nid")
		InternalContextColumn = postgres.StringColumn("internal_context")
		allColumns            = postgres.ColumnList{IDColumn, RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, ActiveMethodColumn, CsrfTokenColumn, CreatedAtColumn, UpdatedAtColumn, TypeColumn, UIColumn, NidColumn, InternalContextColumn}
		mutableColumns        = postgres.ColumnList{RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, ActiveMethodColumn, CsrfTokenColumn, CreatedAtColumn, UpdatedAtColumn, TypeColumn, UIColumn, NidColumn, InternalContextColumn}
	)

	return selfserviceRegistrationFlowsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		RequestURL:      RequestURLColumn,
		IssuedAt:        IssuedAtColumn,
		ExpiresAt:       ExpiresAtColumn,
		ActiveMethod:    ActiveMethodColumn,
		CsrfToken:       CsrfTokenColumn,
		CreatedAt:       CreatedAtColumn,
		UpdatedAt:       UpdatedAtColumn,
		Type:            TypeColumn,
		UI:              UIColumn,
		Nid:             NidColumn,
		InternalContext: InternalContextColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
