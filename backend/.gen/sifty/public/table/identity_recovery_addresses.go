//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var IdentityRecoveryAddresses = newIdentityRecoveryAddressesTable("public", "identity_recovery_addresses", "")

type identityRecoveryAddressesTable struct {
	postgres.Table

	//Columns
	ID         postgres.ColumnString
	Via        postgres.ColumnString
	Value      postgres.ColumnString
	IdentityID postgres.ColumnString
	CreatedAt  postgres.ColumnTimestamp
	UpdatedAt  postgres.ColumnTimestamp
	Nid        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type IdentityRecoveryAddressesTable struct {
	identityRecoveryAddressesTable

	EXCLUDED identityRecoveryAddressesTable
}

// AS creates new IdentityRecoveryAddressesTable with assigned alias
func (a IdentityRecoveryAddressesTable) AS(alias string) *IdentityRecoveryAddressesTable {
	return newIdentityRecoveryAddressesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new IdentityRecoveryAddressesTable with assigned schema name
func (a IdentityRecoveryAddressesTable) FromSchema(schemaName string) *IdentityRecoveryAddressesTable {
	return newIdentityRecoveryAddressesTable(schemaName, a.TableName(), a.Alias())
}

func newIdentityRecoveryAddressesTable(schemaName, tableName, alias string) *IdentityRecoveryAddressesTable {
	return &IdentityRecoveryAddressesTable{
		identityRecoveryAddressesTable: newIdentityRecoveryAddressesTableImpl(schemaName, tableName, alias),
		EXCLUDED:                       newIdentityRecoveryAddressesTableImpl("", "excluded", ""),
	}
}

func newIdentityRecoveryAddressesTableImpl(schemaName, tableName, alias string) identityRecoveryAddressesTable {
	var (
		IDColumn         = postgres.StringColumn("id")
		ViaColumn        = postgres.StringColumn("via")
		ValueColumn      = postgres.StringColumn("value")
		IdentityIDColumn = postgres.StringColumn("identity_id")
		CreatedAtColumn  = postgres.TimestampColumn("created_at")
		UpdatedAtColumn  = postgres.TimestampColumn("updated_at")
		NidColumn        = postgres.StringColumn("nid")
		allColumns       = postgres.ColumnList{IDColumn, ViaColumn, ValueColumn, IdentityIDColumn, CreatedAtColumn, UpdatedAtColumn, NidColumn}
		mutableColumns   = postgres.ColumnList{ViaColumn, ValueColumn, IdentityIDColumn, CreatedAtColumn, UpdatedAtColumn, NidColumn}
	)

	return identityRecoveryAddressesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		Via:        ViaColumn,
		Value:      ValueColumn,
		IdentityID: IdentityIDColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,
		Nid:        NidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
