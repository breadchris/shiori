//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CourierMessages = newCourierMessagesTable("public", "courier_messages", "")

type courierMessagesTable struct {
	postgres.Table

	//Columns
	ID           postgres.ColumnString
	Type         postgres.ColumnInteger
	Status       postgres.ColumnInteger
	Body         postgres.ColumnString
	Subject      postgres.ColumnString
	Recipient    postgres.ColumnString
	CreatedAt    postgres.ColumnTimestamp
	UpdatedAt    postgres.ColumnTimestamp
	TemplateType postgres.ColumnString
	TemplateData postgres.ColumnString
	Nid          postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CourierMessagesTable struct {
	courierMessagesTable

	EXCLUDED courierMessagesTable
}

// AS creates new CourierMessagesTable with assigned alias
func (a CourierMessagesTable) AS(alias string) *CourierMessagesTable {
	return newCourierMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CourierMessagesTable with assigned schema name
func (a CourierMessagesTable) FromSchema(schemaName string) *CourierMessagesTable {
	return newCourierMessagesTable(schemaName, a.TableName(), a.Alias())
}

func newCourierMessagesTable(schemaName, tableName, alias string) *CourierMessagesTable {
	return &CourierMessagesTable{
		courierMessagesTable: newCourierMessagesTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newCourierMessagesTableImpl("", "excluded", ""),
	}
}

func newCourierMessagesTableImpl(schemaName, tableName, alias string) courierMessagesTable {
	var (
		IDColumn           = postgres.StringColumn("id")
		TypeColumn         = postgres.IntegerColumn("type")
		StatusColumn       = postgres.IntegerColumn("status")
		BodyColumn         = postgres.StringColumn("body")
		SubjectColumn      = postgres.StringColumn("subject")
		RecipientColumn    = postgres.StringColumn("recipient")
		CreatedAtColumn    = postgres.TimestampColumn("created_at")
		UpdatedAtColumn    = postgres.TimestampColumn("updated_at")
		TemplateTypeColumn = postgres.StringColumn("template_type")
		TemplateDataColumn = postgres.StringColumn("template_data")
		NidColumn          = postgres.StringColumn("nid")
		allColumns         = postgres.ColumnList{IDColumn, TypeColumn, StatusColumn, BodyColumn, SubjectColumn, RecipientColumn, CreatedAtColumn, UpdatedAtColumn, TemplateTypeColumn, TemplateDataColumn, NidColumn}
		mutableColumns     = postgres.ColumnList{TypeColumn, StatusColumn, BodyColumn, SubjectColumn, RecipientColumn, CreatedAtColumn, UpdatedAtColumn, TemplateTypeColumn, TemplateDataColumn, NidColumn}
	)

	return courierMessagesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		Type:         TypeColumn,
		Status:       StatusColumn,
		Body:         BodyColumn,
		Subject:      SubjectColumn,
		Recipient:    RecipientColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,
		TemplateType: TemplateTypeColumn,
		TemplateData: TemplateDataColumn,
		Nid:          NidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
