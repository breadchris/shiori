//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SelfserviceVerificationFlows = newSelfserviceVerificationFlowsTable("public", "selfservice_verification_flows", "")

type selfserviceVerificationFlowsTable struct {
	postgres.Table

	//Columns
	ID           postgres.ColumnString
	RequestURL   postgres.ColumnString
	IssuedAt     postgres.ColumnTimestamp
	ExpiresAt    postgres.ColumnTimestamp
	CsrfToken    postgres.ColumnString
	CreatedAt    postgres.ColumnTimestamp
	UpdatedAt    postgres.ColumnTimestamp
	Type         postgres.ColumnString
	State        postgres.ColumnString
	ActiveMethod postgres.ColumnString
	UI           postgres.ColumnString
	Nid          postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SelfserviceVerificationFlowsTable struct {
	selfserviceVerificationFlowsTable

	EXCLUDED selfserviceVerificationFlowsTable
}

// AS creates new SelfserviceVerificationFlowsTable with assigned alias
func (a SelfserviceVerificationFlowsTable) AS(alias string) *SelfserviceVerificationFlowsTable {
	return newSelfserviceVerificationFlowsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SelfserviceVerificationFlowsTable with assigned schema name
func (a SelfserviceVerificationFlowsTable) FromSchema(schemaName string) *SelfserviceVerificationFlowsTable {
	return newSelfserviceVerificationFlowsTable(schemaName, a.TableName(), a.Alias())
}

func newSelfserviceVerificationFlowsTable(schemaName, tableName, alias string) *SelfserviceVerificationFlowsTable {
	return &SelfserviceVerificationFlowsTable{
		selfserviceVerificationFlowsTable: newSelfserviceVerificationFlowsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                          newSelfserviceVerificationFlowsTableImpl("", "excluded", ""),
	}
}

func newSelfserviceVerificationFlowsTableImpl(schemaName, tableName, alias string) selfserviceVerificationFlowsTable {
	var (
		IDColumn           = postgres.StringColumn("id")
		RequestURLColumn   = postgres.StringColumn("request_url")
		IssuedAtColumn     = postgres.TimestampColumn("issued_at")
		ExpiresAtColumn    = postgres.TimestampColumn("expires_at")
		CsrfTokenColumn    = postgres.StringColumn("csrf_token")
		CreatedAtColumn    = postgres.TimestampColumn("created_at")
		UpdatedAtColumn    = postgres.TimestampColumn("updated_at")
		TypeColumn         = postgres.StringColumn("type")
		StateColumn        = postgres.StringColumn("state")
		ActiveMethodColumn = postgres.StringColumn("active_method")
		UIColumn           = postgres.StringColumn("ui")
		NidColumn          = postgres.StringColumn("nid")
		allColumns         = postgres.ColumnList{IDColumn, RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, CsrfTokenColumn, CreatedAtColumn, UpdatedAtColumn, TypeColumn, StateColumn, ActiveMethodColumn, UIColumn, NidColumn}
		mutableColumns     = postgres.ColumnList{RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, CsrfTokenColumn, CreatedAtColumn, UpdatedAtColumn, TypeColumn, StateColumn, ActiveMethodColumn, UIColumn, NidColumn}
	)

	return selfserviceVerificationFlowsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		RequestURL:   RequestURLColumn,
		IssuedAt:     IssuedAtColumn,
		ExpiresAt:    ExpiresAtColumn,
		CsrfToken:    CsrfTokenColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,
		Type:         TypeColumn,
		State:        StateColumn,
		ActiveMethod: ActiveMethodColumn,
		UI:           UIColumn,
		Nid:          NidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
