//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ContinuityContainers = newContinuityContainersTable("public", "continuity_containers", "")

type continuityContainersTable struct {
	postgres.Table

	//Columns
	ID         postgres.ColumnString
	IdentityID postgres.ColumnString
	Name       postgres.ColumnString
	Payload    postgres.ColumnString
	ExpiresAt  postgres.ColumnTimestamp
	CreatedAt  postgres.ColumnTimestamp
	UpdatedAt  postgres.ColumnTimestamp
	Nid        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ContinuityContainersTable struct {
	continuityContainersTable

	EXCLUDED continuityContainersTable
}

// AS creates new ContinuityContainersTable with assigned alias
func (a ContinuityContainersTable) AS(alias string) *ContinuityContainersTable {
	return newContinuityContainersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ContinuityContainersTable with assigned schema name
func (a ContinuityContainersTable) FromSchema(schemaName string) *ContinuityContainersTable {
	return newContinuityContainersTable(schemaName, a.TableName(), a.Alias())
}

func newContinuityContainersTable(schemaName, tableName, alias string) *ContinuityContainersTable {
	return &ContinuityContainersTable{
		continuityContainersTable: newContinuityContainersTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newContinuityContainersTableImpl("", "excluded", ""),
	}
}

func newContinuityContainersTableImpl(schemaName, tableName, alias string) continuityContainersTable {
	var (
		IDColumn         = postgres.StringColumn("id")
		IdentityIDColumn = postgres.StringColumn("identity_id")
		NameColumn       = postgres.StringColumn("name")
		PayloadColumn    = postgres.StringColumn("payload")
		ExpiresAtColumn  = postgres.TimestampColumn("expires_at")
		CreatedAtColumn  = postgres.TimestampColumn("created_at")
		UpdatedAtColumn  = postgres.TimestampColumn("updated_at")
		NidColumn        = postgres.StringColumn("nid")
		allColumns       = postgres.ColumnList{IDColumn, IdentityIDColumn, NameColumn, PayloadColumn, ExpiresAtColumn, CreatedAtColumn, UpdatedAtColumn, NidColumn}
		mutableColumns   = postgres.ColumnList{IdentityIDColumn, NameColumn, PayloadColumn, ExpiresAtColumn, CreatedAtColumn, UpdatedAtColumn, NidColumn}
	)

	return continuityContainersTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		IdentityID: IdentityIDColumn,
		Name:       NameColumn,
		Payload:    PayloadColumn,
		ExpiresAt:  ExpiresAtColumn,
		CreatedAt:  CreatedAtColumn,
		UpdatedAt:  UpdatedAtColumn,
		Nid:        NidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
