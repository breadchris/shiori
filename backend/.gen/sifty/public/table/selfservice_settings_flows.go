//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SelfserviceSettingsFlows = newSelfserviceSettingsFlowsTable("public", "selfservice_settings_flows", "")

type selfserviceSettingsFlowsTable struct {
	postgres.Table

	//Columns
	ID              postgres.ColumnString
	RequestURL      postgres.ColumnString
	IssuedAt        postgres.ColumnTimestamp
	ExpiresAt       postgres.ColumnTimestamp
	IdentityID      postgres.ColumnString
	CreatedAt       postgres.ColumnTimestamp
	UpdatedAt       postgres.ColumnTimestamp
	ActiveMethod    postgres.ColumnString
	State           postgres.ColumnString
	Type            postgres.ColumnString
	UI              postgres.ColumnString
	Nid             postgres.ColumnString
	InternalContext postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SelfserviceSettingsFlowsTable struct {
	selfserviceSettingsFlowsTable

	EXCLUDED selfserviceSettingsFlowsTable
}

// AS creates new SelfserviceSettingsFlowsTable with assigned alias
func (a SelfserviceSettingsFlowsTable) AS(alias string) *SelfserviceSettingsFlowsTable {
	return newSelfserviceSettingsFlowsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SelfserviceSettingsFlowsTable with assigned schema name
func (a SelfserviceSettingsFlowsTable) FromSchema(schemaName string) *SelfserviceSettingsFlowsTable {
	return newSelfserviceSettingsFlowsTable(schemaName, a.TableName(), a.Alias())
}

func newSelfserviceSettingsFlowsTable(schemaName, tableName, alias string) *SelfserviceSettingsFlowsTable {
	return &SelfserviceSettingsFlowsTable{
		selfserviceSettingsFlowsTable: newSelfserviceSettingsFlowsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                      newSelfserviceSettingsFlowsTableImpl("", "excluded", ""),
	}
}

func newSelfserviceSettingsFlowsTableImpl(schemaName, tableName, alias string) selfserviceSettingsFlowsTable {
	var (
		IDColumn              = postgres.StringColumn("id")
		RequestURLColumn      = postgres.StringColumn("request_url")
		IssuedAtColumn        = postgres.TimestampColumn("issued_at")
		ExpiresAtColumn       = postgres.TimestampColumn("expires_at")
		IdentityIDColumn      = postgres.StringColumn("identity_id")
		CreatedAtColumn       = postgres.TimestampColumn("created_at")
		UpdatedAtColumn       = postgres.TimestampColumn("updated_at")
		ActiveMethodColumn    = postgres.StringColumn("active_method")
		StateColumn           = postgres.StringColumn("state")
		TypeColumn            = postgres.StringColumn("type")
		UIColumn              = postgres.StringColumn("ui")
		NidColumn             = postgres.StringColumn("nid")
		InternalContextColumn = postgres.StringColumn("internal_context")
		allColumns            = postgres.ColumnList{IDColumn, RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, IdentityIDColumn, CreatedAtColumn, UpdatedAtColumn, ActiveMethodColumn, StateColumn, TypeColumn, UIColumn, NidColumn, InternalContextColumn}
		mutableColumns        = postgres.ColumnList{RequestURLColumn, IssuedAtColumn, ExpiresAtColumn, IdentityIDColumn, CreatedAtColumn, UpdatedAtColumn, ActiveMethodColumn, StateColumn, TypeColumn, UIColumn, NidColumn, InternalContextColumn}
	)

	return selfserviceSettingsFlowsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		RequestURL:      RequestURLColumn,
		IssuedAt:        IssuedAtColumn,
		ExpiresAt:       ExpiresAtColumn,
		IdentityID:      IdentityIDColumn,
		CreatedAt:       CreatedAtColumn,
		UpdatedAt:       UpdatedAtColumn,
		ActiveMethod:    ActiveMethodColumn,
		State:           StateColumn,
		Type:            TypeColumn,
		UI:              UIColumn,
		Nid:             NidColumn,
		InternalContext: InternalContextColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
