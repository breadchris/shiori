//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var BookmarkTags = newBookmarkTagsTable("public", "bookmark_tags", "")

type bookmarkTagsTable struct {
	postgres.Table

	//Columns
	BookmarkID postgres.ColumnString
	TagID      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type BookmarkTagsTable struct {
	bookmarkTagsTable

	EXCLUDED bookmarkTagsTable
}

// AS creates new BookmarkTagsTable with assigned alias
func (a BookmarkTagsTable) AS(alias string) *BookmarkTagsTable {
	return newBookmarkTagsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new BookmarkTagsTable with assigned schema name
func (a BookmarkTagsTable) FromSchema(schemaName string) *BookmarkTagsTable {
	return newBookmarkTagsTable(schemaName, a.TableName(), a.Alias())
}

func newBookmarkTagsTable(schemaName, tableName, alias string) *BookmarkTagsTable {
	return &BookmarkTagsTable{
		bookmarkTagsTable: newBookmarkTagsTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newBookmarkTagsTableImpl("", "excluded", ""),
	}
}

func newBookmarkTagsTableImpl(schemaName, tableName, alias string) bookmarkTagsTable {
	var (
		BookmarkIDColumn = postgres.StringColumn("bookmark_id")
		TagIDColumn      = postgres.StringColumn("tag_id")
		allColumns       = postgres.ColumnList{BookmarkIDColumn, TagIDColumn}
		mutableColumns   = postgres.ColumnList{}
	)

	return bookmarkTagsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		BookmarkID: BookmarkIDColumn,
		TagID:      TagIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
