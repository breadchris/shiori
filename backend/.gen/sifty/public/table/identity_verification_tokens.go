//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var IdentityVerificationTokens = newIdentityVerificationTokensTable("public", "identity_verification_tokens", "")

type identityVerificationTokensTable struct {
	postgres.Table

	//Columns
	ID                            postgres.ColumnString
	Token                         postgres.ColumnString
	Used                          postgres.ColumnBool
	UsedAt                        postgres.ColumnTimestamp
	ExpiresAt                     postgres.ColumnTimestamp
	IssuedAt                      postgres.ColumnTimestamp
	IdentityVerifiableAddressID   postgres.ColumnString
	SelfserviceVerificationFlowID postgres.ColumnString
	CreatedAt                     postgres.ColumnTimestamp
	UpdatedAt                     postgres.ColumnTimestamp
	Nid                           postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type IdentityVerificationTokensTable struct {
	identityVerificationTokensTable

	EXCLUDED identityVerificationTokensTable
}

// AS creates new IdentityVerificationTokensTable with assigned alias
func (a IdentityVerificationTokensTable) AS(alias string) *IdentityVerificationTokensTable {
	return newIdentityVerificationTokensTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new IdentityVerificationTokensTable with assigned schema name
func (a IdentityVerificationTokensTable) FromSchema(schemaName string) *IdentityVerificationTokensTable {
	return newIdentityVerificationTokensTable(schemaName, a.TableName(), a.Alias())
}

func newIdentityVerificationTokensTable(schemaName, tableName, alias string) *IdentityVerificationTokensTable {
	return &IdentityVerificationTokensTable{
		identityVerificationTokensTable: newIdentityVerificationTokensTableImpl(schemaName, tableName, alias),
		EXCLUDED:                        newIdentityVerificationTokensTableImpl("", "excluded", ""),
	}
}

func newIdentityVerificationTokensTableImpl(schemaName, tableName, alias string) identityVerificationTokensTable {
	var (
		IDColumn                            = postgres.StringColumn("id")
		TokenColumn                         = postgres.StringColumn("token")
		UsedColumn                          = postgres.BoolColumn("used")
		UsedAtColumn                        = postgres.TimestampColumn("used_at")
		ExpiresAtColumn                     = postgres.TimestampColumn("expires_at")
		IssuedAtColumn                      = postgres.TimestampColumn("issued_at")
		IdentityVerifiableAddressIDColumn   = postgres.StringColumn("identity_verifiable_address_id")
		SelfserviceVerificationFlowIDColumn = postgres.StringColumn("selfservice_verification_flow_id")
		CreatedAtColumn                     = postgres.TimestampColumn("created_at")
		UpdatedAtColumn                     = postgres.TimestampColumn("updated_at")
		NidColumn                           = postgres.StringColumn("nid")
		allColumns                          = postgres.ColumnList{IDColumn, TokenColumn, UsedColumn, UsedAtColumn, ExpiresAtColumn, IssuedAtColumn, IdentityVerifiableAddressIDColumn, SelfserviceVerificationFlowIDColumn, CreatedAtColumn, UpdatedAtColumn, NidColumn}
		mutableColumns                      = postgres.ColumnList{TokenColumn, UsedColumn, UsedAtColumn, ExpiresAtColumn, IssuedAtColumn, IdentityVerifiableAddressIDColumn, SelfserviceVerificationFlowIDColumn, CreatedAtColumn, UpdatedAtColumn, NidColumn}
	)

	return identityVerificationTokensTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                            IDColumn,
		Token:                         TokenColumn,
		Used:                          UsedColumn,
		UsedAt:                        UsedAtColumn,
		ExpiresAt:                     ExpiresAtColumn,
		IssuedAt:                      IssuedAtColumn,
		IdentityVerifiableAddressID:   IdentityVerifiableAddressIDColumn,
		SelfserviceVerificationFlowID: SelfserviceVerificationFlowIDColumn,
		CreatedAt:                     CreatedAtColumn,
		UpdatedAt:                     UpdatedAtColumn,
		Nid:                           NidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
